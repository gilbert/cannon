name: Backmerge main to dev

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backmerge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important: fetch all history
          ref: dev # Checkout dev branch

      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Merge main into dev
        id: merge
        continue-on-error: true
        run: |
          git fetch origin main
          git merge origin/main --no-edit

      - name: Push if merge successful
        if: steps.merge.outcome == 'success'
        run: git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR on merge conflict
        if: steps.merge.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = `backmerge/main-to-dev-${Date.now()}`;
            await exec.exec('git', ['checkout', '-b', branchName]);
            await exec.exec('git', ['push', 'origin', branchName]);

            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'chore(ci): backmerge main â†’ dev',
              body: 'Automatic merge from main to dev failed. This PR was created to help resolve conflicts.',
              head: branchName,
              base: 'dev'
            });
